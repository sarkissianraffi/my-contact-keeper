{"ast":null,"code":"var _jsxFileName = \"/Users/Raffi/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types'; // Set the initial States\n\nconst ContactState = props => {\n  const initialState = {\n    // Hard coded contact as far as we don't get it from our API\n    contacts: [{\n      id: 1,\n      name: 'Raffi Sarkissian',\n      email: 'raffi@raffi.com',\n      phone: '111-111-111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Brenda Gutierrez',\n      email: 'brenda@brenda.com',\n      phone: '222-222-222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'PA Oillic',\n      email: 'pa@pa.com',\n      phone: '333-333-333',\n      type: 'professional'\n    }]\n  }; // Pull out the state and dispatch to our reducer\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n  // Delete Contact\n  // Set Current Contact\n  // Clear Current Contact\n  // Update Contact\n  // Filter Contacts\n  // Clear Filter\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/Raffi/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP,C,CAUA;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,YAAY,GAAG;AACnB;AACAC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,kBAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,aAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,kBAFR;AAGEC,MAAAA,KAAK,EAAE,mBAHT;AAIEC,MAAAA,KAAK,EAAE,aAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,KAAK,EAAE,WAHT;AAIEC,MAAAA,KAAK,EAAE,aAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ;AAFS,GAArB,CAD8B,CA4B9B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACG,cAAD,EAAiBU,YAAjB,CAApC,CA7B8B,CA+B9B;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AADX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,KAAK,CAACU,QALT,CADF;AASD,CAtDD;;AAwDA,eAAeX,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types';\n\n// Set the initial States\nconst ContactState = (props) => {\n  const initialState = {\n    // Hard coded contact as far as we don't get it from our API\n    contacts: [\n      {\n        id: 1,\n        name: 'Raffi Sarkissian',\n        email: 'raffi@raffi.com',\n        phone: '111-111-111',\n        type: 'personal',\n      },\n      {\n        id: 2,\n        name: 'Brenda Gutierrez',\n        email: 'brenda@brenda.com',\n        phone: '222-222-222',\n        type: 'personal',\n      },\n      {\n        id: 3,\n        name: 'PA Oillic',\n        email: 'pa@pa.com',\n        phone: '333-333-333',\n        type: 'professional',\n      },\n    ],\n  };\n\n  // Pull out the state and dispatch to our reducer\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  // Add Contact\n\n  // Delete Contact\n\n  // Set Current Contact\n\n  // Clear Current Contact\n\n  // Update Contact\n\n  // Filter Contacts\n\n  // Clear Filter\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}