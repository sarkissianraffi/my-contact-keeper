{"ast":null,"code":"var _jsxFileName = \"/Users/Raffi/Desktop/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types'; // Set the initial States\n\nconst AuthState = props => {\n  const initialState = {\n    //store the token in localstorage\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  }; // Pull out the state and dispatch to our reducer\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Load User\n  // Register User\n  // Login User\n  // Log Out\n  // Clear Errors\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Raffi/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP,C,CAWA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnB;AACAC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFY;AAGnBC,IAAAA,eAAe,EAAE,IAHE;AAInBC,IAAAA,OAAO,EAAE,IAJU;AAKnBC,IAAAA,KAAK,EAAE,IALY;AAMnBC,IAAAA,IAAI,EAAE;AANa,GAArB,CAD2B,CAU3B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CAX2B,CAa3B;AAEA;AAEA;AAEA;AAEA;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILE,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAJP;AAKLD,MAAAA,KAAK,EAAEE,KAAK,CAACF;AALR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGP,KAAK,CAACW,QATT,CADF;AAaD,CApCD;;AAsCA,eAAeZ,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\n// Set the initial States\nconst AuthState = (props) => {\n  const initialState = {\n    //store the token in localstorage\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  // Pull out the state and dispatch to our reducer\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // Load User\n\n  // Register User\n\n  // Login User\n\n  // Log Out\n\n  // Clear Errors\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}