{"ast":null,"code":"var _jsxFileName = \"/Users/Raffi/Desktop/my-contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types'; // Set the initial States\n\nconst AuthState = props => {\n  const initialState = {\n    //store the token in localstorage\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  }; // Pull out the state and dispatch to our reducer\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    // Load token into global headers\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      }); // Call LoadUser function\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      }); // Call LoadUser function\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Log Out\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors,\n      loadUser,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Raffi/Desktop/my-contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","loadUser","res","get","type","payload","data","register","formData","config","headers","post","err","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\n// Set the initial States\nconst AuthState = (props) => {\n  const initialState = {\n    //store the token in localstorage\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  // Pull out the state and dispatch to our reducer\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    // Load token into global headers\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    }\n  };\n\n  // Register User\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      // Call LoadUser function\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      // Call LoadUser function\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Log Out\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        clearErrors,\n        loadUser,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}