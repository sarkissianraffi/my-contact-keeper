{"ast":null,"code":"var _jsxFileName = \"/Users/Raffi/Desktop/contact-keeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n  const [state, dispatch] = useReducer(alertReducer, initialState); // Set Alert\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuidv4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/Raffi/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuidv4","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","alertReducer","setAlert","msg","type","timeout","id","payload","setTimeout","alerts","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACY,YAAD,EAAeH,YAAf,CAApC,CAH4B,CAK5B;;AACA,QAAMI,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC9C,UAAMC,EAAE,GAAGf,MAAM,EAAjB;AACAS,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,SADC;AAEPa,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFF,KAAD,CAAR;AAKAE,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,YAAR;AAAsBY,MAAAA,OAAO,EAAED;AAA/B,KAAD,CAAf,EAAsDD,OAAtD,CAAV;AACD,GARD;;AAUA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAEV,KADH;AAELG,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGL,KAAK,CAACa,QANT,CADF;AAUD,CA1BD;;AA4BA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AlertContext from './AlertContext';\nimport AlertReducer from './AlertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuidv4();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}